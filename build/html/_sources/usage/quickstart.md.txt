Como utilizar
============================================

Inicie um tableu contendo a quantidade de variaveis e de restricoes:

    tableau = gen_matrix([variaveis], [restricoes])
    
Insira todas as restricoes seguindo a notacao `'[x1],[x2],...,[xn],[operador],[restricao]'`, sem utilizar espacos:

    tableau = insert_constraint(tableau, '[x1],[x2],...,[xn],[operador],[restricao]')
    
Insira a funcao objetivo seguindo a notacao `'[x1],[x2],...,[xn],[constante]'`. Caso nao exista constante, a mesma deve ser iniciada com `0`

    tableau = insert_obj_fun(tableau, '[x1],[x2],...,[xn],[constante]')
    
Recupere o resultado atraves de uma variavel que e retornada do metodo.

    result = simplex.maximize(tableau)
    
O `result` e um `Dictionary` contendo os campos `res_var` e `result`:
 - `res_var`: `Dictionary` contendo o valores de x1, x2,..., xn;
 - `result`: contem o valor da operacao, sendo ele o maximo ou minimo do PL.

#Exemplos

## Simplex

### Maximizacao

    tableau = gen_matrix(2, 4)

    tableau = insert_constraint(tableau, '6,4,<=,24')
    tableau = insert_constraint(tableau, '1,2,<=,6')
    tableau = insert_constraint(tableau, '-1,1,<=,1')
    tableau = insert_constraint(tableau, '0,1,<=,2')
    tableau = insert_obj_fun(tableau, '5,4,0')

    result = simplex.maximize(tableau)

    print(result['res_var'])
    print(result['result'])

### Minimizacao

    tableau = gen_matrix(4, 3)

    tableau = insert_constraint(tableau, '1,2,2,4,<=,40')
    tableau = insert_constraint(tableau, '2,-1,3,2,<=,8')
    tableau = insert_constraint(tableau, '4,-2,1,-1,<=,10')
    tableau = insert_obj_fun(tableau, '5,-4,6,-8,0')

    result = simplex.minimize(tableau)

    print(result['res_var'])
    print(result['result'])

## Simplex de duas fases

### Maximizacao

    tableau = gen_matrix(3, 3)

    tableau = insert_constraint(tableau, '2,1,-1,<=,10')
    tableau = insert_constraint(tableau, '1,1,2,>=,20')
    tableau = insert_constraint(tableau, '2,1,3,=,60')
    tableau = insert_obj_fun(tableau, '1,1,1,0')

    result = simplex_two_steps.maximize(tableau)

    print(result['res_var'])
    print(result['result'])
    
### Minimizacao
    
    tableau = gen_matrix(2, 3)

    tableau = insert_constraint(tableau, '1,1,>=,2')
    tableau = insert_constraint(tableau, '-1,1,>=,1')
    tableau = insert_constraint(tableau, '0,1,<=,3')
    tableau = insert_obj_fun(tableau, '1,-2,0')

    result = simplex_two_steps.minimize(tableau)

    print(result['res_var'])
    print(result['result'])

## Branch and Bound

### Maximizacao

    tableau = gen_matrix(2, 2)

    tableau = insert_constraint(tableau, '1,1,<=,6')
    tableau = insert_constraint(tableau, '5,9,<=,45')
    tableau = insert_obj_fun(tableau, '5,8,0')

    result = branch_and_bound.maximize(tableau)

    print(result['res_var'])
    print(result['result'])
    
### Minimizacao

    tableau = gen_matrix(2, 2)

    tableau = insert_constraint(tableau, '6,7,>=,40')
    tableau = insert_constraint(tableau, '0,1,>=,2')
    tableau = insert_obj_fun(tableau, '6,8,0')

    result = branch_and_bound.minimize(tableau)
    print(result['res_var'])
    print(result['result'])